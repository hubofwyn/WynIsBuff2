name: CI

on:
  push:
    branches: [main, dev]
  pull_request:
    branches: [main]

env:
  CI: true
  DISABLE_TELEMETRY: true

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm test

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results-${{ matrix.node-version }}
          path: test-results/
          retention-days: 7

  lint:
    name: Lint
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run ESLint
        run: npm run lint

      - name: Check formatting
        run: npm run format:check

  build:
    name: Build
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build project
        run: npm run build-nolog

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: dist/
          retention-days: 7

  security:
    name: Security Audit
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: 'npm'

      - name: Run npm audit
        run: npm audit --production
        continue-on-error: true

      - name: Check for known vulnerabilities
        run: |
          npm list --depth=0 --json > dependencies.json
          echo "Dependencies have been listed for review"

  code-quality:
    name: Code Quality
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch all history for better analysis

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Check for duplicate code
        run: |
          npx jscpd src --min-lines 10 --min-tokens 50 --format "json" > duplication-report.json || true
          if [ -f duplication-report.json ]; then
            echo "Duplication report generated"
          fi

      - name: Upload quality reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: quality-reports
          path: |
            duplication-report.json
            dependencies.json
          retention-days: 7

  compatibility:
    name: Browser Compatibility Check
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Check ES Module compatibility
        run: |
          echo "Checking for ES Module compatibility..."
          # Check for any remaining require() calls
          ! grep -r "require(" src/ --include="*.js" --include="*.mjs" || echo "No CommonJS require() found"
          
          # Check for proper import extensions
          echo "Checking import statements have .js extensions..."
          ! grep -r "from ['\"]\..*[^.js]['\"]" src/ --include="*.js" --include="*.mjs" || echo "All imports have proper extensions"